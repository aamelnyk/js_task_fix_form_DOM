{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCcA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAZmB,SAAS,gBAAgB,CAAC,W,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAYtC,OAAO,CAAC,SAAC,CAAhB,EACE,GAAK,EAAM,IAAI,EAIf,IAVM,EAUA,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,MAAM,CAAC,GAEb,EAAM,SAAS,CAAG,cAElB,EAAM,WAAW,CApBV,AAoBuB,EAAM,IAAI,CApB7B,OAAO,CAAC,WAAY,OAAO,IAAI,GAsB1C,EAAM,YAAY,CAAC,cAhBZ,CAFD,EAAS,AAkBmC,EAAM,IAAI,CAlBzC,OAAO,CAAC,WAAY,OAAO,IAAI,IAEpC,MAAM,CAAC,GAAG,WAAW,GAAK,EAAO,KAAK,CAAC,IAiBvD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar inputs = _to_consumable_array(document.querySelectorAll(\"input\"));\nfunction labelName(str) {\n    return str.replace(/([A-Z])/g, \" $1\").trim();\n}\nfunction placeholderName(str) {\n    var result = str.replace(/([A-Z])/g, \" $1\").trim();\n    return result.charAt(0).toUpperCase() + result.slice(1);\n}\ninputs.forEach(function(input) {\n    if (!input.name) return;\n    var label = document.createElement(\"label\");\n    input.before(label);\n    label.className = \"field-label\";\n    label.textContent = labelName(input.name);\n    input.setAttribute(\"placeholder\", placeholderName(input.name));\n});\n\n//# sourceMappingURL=index.b28f62c5.js.map\n","'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\nfunction labelName(str) {\n  return str.replace(/([A-Z])/g, ' $1').trim();\n}\n\nfunction placeholderName(str) {\n  const result = str.replace(/([A-Z])/g, ' $1').trim();\n\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\ninputs.forEach((input) => {\n  if (!input.name) {\n    return;\n  }\n\n  const label = document.createElement('label');\n\n  input.before(label);\n\n  label.className = 'field-label';\n\n  label.textContent = labelName(input.name);\n\n  input.setAttribute('placeholder', placeholderName(input.name));\n});\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","inputs","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","input","result","label","createElement","before","className","textContent","str","replace","trim","setAttribute","charAt","toUpperCase"],"version":3,"file":"index.b28f62c5.js.map"}